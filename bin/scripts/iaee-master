#!/usr/bin/python

from time import sleep
import os.path
import socket
import subprocess
import sys

def updatepidfile(IAEE_HOME, pid):
   pidfile = open(IAEE_HOME + '/.master/master-' + str(socket.gethostname()) + '.pid', 'w')
   pidfile.write(str(pid) + '\n')
   pidfile.close()
   return True

def startmaster(IAEE_HOME, quiet):
   if quiet:
      iaee = subprocess.Popen(['java', '-jar', IAEE_HOME + '/jar/iaee.jar', '-m'], stdout=open(IAEE_HOME + '/.master/master-' + str(socket.gethostname()) + '-stdout.tty', 'a'), stderr=open(IAEE_HOME + '/.master/master-' + str(socket.gethostname()) + '-stderr.tty', 'a')) 
      # update IAEE_HOME/.master/master-$HOSTNAME.pid
      updatepidfile(IAEE_HOME, iaee.pid)
   else:
      iaee = subprocess.Popen(['java', '-jar', IAEE_HOME + '/jar/iaee.jar', '-m']) 
      # update IAEE_HOME/.master/master-$HOSTNAME.pid
      updatepidfile(IAEE_HOME, iaee.pid)
      try:
         iaee.wait()
      except KeyboardInterrupt:
         print
         print("iaee-master killed.")
   return True

def helpmsg(IAEE_HOME):
   print("iaee-master: starts a master (server) iaee instance.")
   print
   print("Usage:")
   print("     <iaee-master> runs verbosely, printing everything to the current terminal.")
   print("     <iaee-master verbose> runs verbosely, printing everything to the current terminal.")
   print("     <iaee-master quiet> quiet run - output is redirected to " + IAEE_HOME + "/.master/master-" + str(socket.gethostname()) + "-stdout.tty and " + IAEE_HOME + "/.master/master-" + str(socket.gethostname()) + "-stderr.tty.")
   print("     <iaee-master help> prints this help message.")
   return True

def gethelpmsg():
   print("Wrong usage.")
   print("Type <iaee-master> for usage instructions.")
   return True

def main(argv):
   IAEE_HOME = os.path.expanduser('~') + '/.iaee' 
   if len(argv) == 0:
      print("Starting iaee master instance...")
      sleep(1)
      status = subprocess.call(['iaee-status', 'quiet'])
      if status == 1 or status == 3:
         print("iaee-master already running on " + str(socket.gethostname()) + ".")
         sleep(1)
      else:
         startmaster(IAEE_HOME, False)
   elif len(argv) == 1:
      if argv[0] == 'verbose':
         print("Starting iaee master instance...")
         sleep(1)
         status = subprocess.call(['iaee-status', 'quiet'])
         if status == 1 or status == 3:
            print("iaee-master already running on " + str(socket.gethostname()) + ".")
            sleep(1)
         else:
            startmaster(IAEE_HOME, False)
      elif argv[0] == 'quiet':
         print("Starting iaee master instance...")
         sleep(1)
         status = subprocess.call(['iaee-status', 'quiet'])
         if status == 1 or status == 3:
            print("iaee-master already running on " + str(socket.gethostname()) + ".")
            sleep(1)
         else:
            startmaster(IAEE_HOME, True)
      elif argv[0] == 'help':
         helpmsg(IAEE_HOME)
      else:
         gethelpmsg()
   else:
      gethelpmsg()

if __name__ == "__main__":
   main(sys.argv[1:])
