#!/usr/bin/python

import os
import os.path
import signal
import socket
import subprocess
import sys

def get_pid(pidpath):
   pidfile = open(pidpath, 'r')
   pid = pidfile.readline()
   pidfile.close()
   try:
      pid = int(pid)
   except ValueError:
      pid = int(-99)
   return pid

def killclient(IAEE_HOME):
   killed = False
   status = subprocess.call(['iaee-status','quiet'])
   if status == 2 or status == 3:
      pid = get_pid(IAEE_HOME + '/.client/client-' + str(socket.gethostname()) + '.pid')
      if pid != -99:
         try:
            os.kill(pid, signal.SIGKILL)
         except OSError:
            pass
         else:
            killed = True
   return killed

def killmaster(IAEE_HOME):
   killed = False
   status = subprocess.call(['iaee-status','quiet'])
   if status == 1 or status == 3:
      pid = get_pid(IAEE_HOME + '/.master/master-' + str(socket.gethostname()) + '.pid')
      if pid != -99:
         try:
            os.kill(pid, signal.SIGKILL)
         except OSError:
            pass
         else:
            killed = True
   return killed

def helpmsg():
   print("iaee-kill: kills running instances of iaee")
   print
   print("Usage:")
   print("     <iaee-kill [all]> kills master and client running istances of iaee.")
   print("     <iaee-kill client> kills client running istances of iaee.")
   print("     <iaee-kill master> kills master running istance of iaee.")
   print("     <iaee-kill help> prints this help message")
   return True

def gethelpmsg():
   print("Wrong usage.")
   print("Type <iaee-master help> for usage instructions.")
   return True
   
def main(argv):
   IAEE_HOME = os.path.expanduser('~') + '/.iaee' 
   if len(argv) == 0:
      # iaee-kill all
      killed = killclient(IAEE_HOME)
      if killed == True:
         print("iaee-client running on " + str(socket.gethostname()) + " killed.")
      else:
         print("no iaee-client to kill on " + str(socket.gethostname()) + ".")
      killed = killmaster(IAEE_HOME)
      if killed == True:
         print("iaee-master running on " + str(socket.gethostname()) + " killed.")
      else:
         print("no iaee-master to kill on " + str(socket.gethostname()) + ".")
   elif len(argv) == 1:
      if argv[0] == 'client':
         # kill client
         killed = killclient(IAEE_HOME)
         if killed == True:
            print("iaee-client running on " + str(socket.gethostname()) + " killed.")
         else:
            print("no iaee-client to kill on " + str(socket.gethostname()) + ".")
      elif argv[0] == 'master':
         # kill master
         killed = killmaster(IAEE_HOME)
         if killed == True:
            print("iaee-master running on " + str(socket.gethostname()) + " killed.")
         else:
            print("no iaee-master to kill on " + str(socket.gethostname()) + ".")
      elif argv[0] == 'all': 
         # iaee-kill all
         killed = killclient(IAEE_HOME)
         if killed == True:
            print("iaee-client running on " + str(socket.gethostname()) + " killed.")
         else:
            print("no iaee-client to kill on " + str(socket.gethostname()) + ".")
         killed = killmaster(IAEE_HOME)
         if killed == True:
            print("iaee-master running on " + str(socket.gethostname()) + " killed.")
         else:
            print("no iaee-master to kill on " + str(socket.gethostname()) + ".")
      elif argv[0] == 'help':
         helpmsg()
      else:
         gethelpmsg()
   else:
      gethelpmsg()

if __name__ == "__main__":
   main(sys.argv[1:])
