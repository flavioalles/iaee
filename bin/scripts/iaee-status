#!/usr/bin/python

from os import devnull 
from os import kill
import os.path
import sys
import subprocess
import socket

# checks if iaee is running

def get_pid(pidpath):
   pidfile = open(pidpath, 'r')
   pid = pidfile.readline()
   pidfile.close()
   try: 
      pid = int(pid)
   except ValueError:
      pid = int(-99)
   return pid

def checkStatus(IAEE_HOME):
   status = 0
   for instance in ['master', 'client']:
      pid = get_pid(IAEE_HOME + '/.' + instance + '/' + instance + '-' + str(socket.gethostname()) + '.pid')
      if pid != -99:
         try:
            os.kill(pid, 0)
         except OSError:
            pass
         else:
            if instance == 'master':
               status += 1
            else:
               status += 2
   return status

def helpMsg():
   print "iaee-status: checks if there are any running instances of iaee (master & client)."
   print
   print "Usage:"
   print "     <iaee-status> checks if there are any running instances of iaee (verbosely)."
   print "     <iaee-status quiet> checks if there are any running instances of iaee (no messages printed to stdout - to be used by other programs via exit statuses (below))."
   print "     <iaee-status help> prints this help message."
   print
   print "Exit status:"
   print "     0 - Nothing running"
   print "     1 - Master running"
   print "     2 - Client Running"
   print "     3 - Master & Client running"

def getHelpMsg():
   print "Wrong usage."
   print "Type <iaee-status help> for usage instructions."

def main(argv):
   IAEE_HOME = os.path.expanduser('~') + '/.iaee'
   status = 0
   if len(argv) == 0:
      status = checkStatus(IAEE_HOME)
      if status == 0:
         print "iaee is not running."
      elif status == 1:
         print "iaee-master is running."
      elif status == 2:
         print "iaee-client is running."
      else:
         print "iaee-master & iaee-client are running."
   elif len(argv) == 1:
      if argv[0] == 'quiet':
         status = checkStatus(IAEE_HOME)
      elif argv[0] == 'help':
         helpMsg()
      else:
         getHelpMsg()
   else:
      getHelpMsg()
   sys.exit(status)

if __name__ == "__main__":
   main(sys.argv[1:])
